{
  "name": "AccordionPanel",
  "description": "A collapsible panel with the accordion item contents.\nRenders a `<div>` element.",
  "props": {
    "className": {
      "type": "string | (state) => string",
      "description": "Class names applied to the element or a function that returns them based on the component's state."
    },
    "hiddenUntilFound": {
      "type": "boolean",
      "default": "false",
      "description": "If `true`, sets `hidden=\"until-found\"` when closed. Accordion panels\nwill remain mounted in the DOM when closed and overrides `keepMounted`.\nIf `false`, sets `hidden` when closed."
    },
    "keepMounted": {
      "type": "boolean",
      "default": "false",
      "description": "If `true`, accordion panels remains mounted when closed and is instead\nhidden using the `hidden` attribute.\nIf `false`, accordion panels are unmounted when closed."
    },
    "render": {
      "type": "React.ReactElement | (props, state) => React.ReactElement",
      "description": "A function to customize rendering of the component."
    }
  },
  "dataAttributes": {
    "data-disabled": {
      "description": "Present when the accordion item is disabled."
    },
    "data-ending-style": {
      "description": "Present when the panel is animating out."
    },
    "data-index": {
      "description": "Indicates the index of the accordion item.",
      "type": "number"
    },
    "data-open": {
      "description": "Present when the accordion panel is open."
    },
    "data-starting-style": {
      "description": "Present when the panel is animating in."
    }
  },
  "cssVariables": {
    "--accordion-panel-height": {
      "description": "The accordion panel's height.",
      "type": "number"
    },
    "--accordion-panel-width": {
      "description": "The accordion panel's width.",
      "type": "number"
    }
  }
}
